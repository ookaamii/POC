CREATE DATABASE yourcar;

USE yourcar;

CREATE TABLE role (
id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255) NOT NULL
);

CREATE TABLE user (
id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
mail VARCHAR(255) NOT NULL UNIQUE,
firstname VARCHAR(255),
lastname VARCHAR(255),
password VARCHAR(255) NOT NULL,
phone VARCHAR(100),
birth_date DATE,
role_id INTEGER NOT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (role_id) REFERENCES role(id) ON DELETE CASCADE
);

CREATE TABLE address (
id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
zip_code VARCHAR(10) NOT NULL,
city VARCHAR(255),
country VARCHAR(255),
user_id INTEGER,
FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE
);

CREATE TABLE session (
id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE contact_message (
id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
user_id INTEGER NOT NULL,
content TEXT NOT NULL,
session_id INTEGER NULL,
send_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (session_id) REFERENCES session(id) ON DELETE CASCADE
);


CREATE TABLE agency (
id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255) NOT NULL,
city VARCHAR(255) NOT NULL,
zip_code VARCHAR(10) NOT NULL,
country VARCHAR(255) NOT NULL
);

CREATE TABLE category_car (
id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
category VARCHAR(255) NOT NULL
);


CREATE TABLE location (
id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
city_start VARCHAR(255) NOT NULL,
city_end VARCHAR(255) NOT NULL,
date_start DATETIME NOT NULL,
date_end DATETIME NOT NULL,
category_car_id INTEGER NOT NULL,
price DECIMAL(10,2) NOT NULL,
agency_id INTEGER NOT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (category_car_id) REFERENCES category_car(id) ON DELETE CASCADE,
FOREIGN KEY (agency_id) REFERENCES agency(id) ON DELETE CASCADE
);

CREATE TABLE booking (
id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
user_id INTEGER NOT NULL,
location_id INTEGER NOT NULL,
payement_id INTEGER NOT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE,
FOREIGN KEY (location_id) REFERENCES location(id) ON DELETE CASCADE
);






